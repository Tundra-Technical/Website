<?php
/**
 * Created by PhpStorm.
 * User: jnapoleone
 * Date: 12/5/2013
 * Time: 7:32 PM
 */

define('CLIENT_ID', '408396f4-461d-4194-b39a-4e046089ccc9');
define('CLIENT_SECRET', 'G0TfQxq5Y00khGnzrsXOmpe1HAgnVG1n');
define('USER', 'tundratecapi');
define('PASS', '586sydney');


/**
 * Implements hook_menu().
 */
function bullhorn_rest_menu()
{
    $items = array();

    $items['admin/config/content/bullhorn/bullhorn_rest_api'] = array(
        'title' => 'Settings for Bullhorn API',
        'description' => 'Configuration for bullhorn api module',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('bullhorn_rest_form'),
        'access arguments' => array('access administration pages'),
        'type' => MENU_NORMAL_ITEM,
    );

    return $items;
}

/**
 * Implementation of hook_form()
 * @param $form
 * @param $form_state
 * @return mixed
 */

function bullhorn_rest_form($form, &$form_state)
{
    $form['bullhorn_rest_api_client_id'] = array(
        '#type' => 'textfield',
        '#title' => t('Please enter your Bullhorn client id'),
        '#default_value' => variable_get('bullhorn_rest_api_client_id', ''),
        '#size' => 55,
        '#maxlength' => 55,
        '#description' => t('Please enter your Bullhorn client id'),
        '#required' => TRUE,
    );

    $form['bullhorn_rest_api_client_secret'] = array(
        '#type' => 'textfield',
        '#title' => t('Please enter your Bullhorn client secret'),
        '#default_value' => variable_get('bullhorn_rest_api_client_secret', ''),
        '#size' => 55,
        '#maxlength' => 55,
        '#description' => t('Please enter your Bullhorn client secret'),
        '#required' => TRUE,
    );

    $form['bullhorn_rest_api_username'] = array(
        '#type' => 'textfield',
        '#title' => t('Please enter your Bullhorn username'),
        '#default_value' => variable_get('bullhorn_rest_api_username', ''),
        '#size' => 55,
        '#maxlength' => 55,
        '#description' => t('Please enter your Bullhorn username'),
        '#required' => TRUE,
    );

    $form['bullhorn_rest_api_password'] = array(
        '#type' => 'password',
        '#title' => t('Please enter your Bullhorn password'),
        '#default_value' => variable_get('bullhorn_rest_api_password', ''),
        '#size' => 55,
        '#maxlength' => 55,
        '#description' => t('Please enter your Bullhorn password'),
        '#required' => TRUE,
    );

    return system_settings_form($form);
}



/**
 * Bullhorn Rest API Login
 *
 * @return mixed
 */

function bullhorn_rest_api_login() {
    try {
        $auth_code = getAuthCode();
        $auth      = doBullhornAuth($auth_code);
        $tokens    = json_decode($auth);
        $session   = doBullhornLogin($tokens->access_token);

        return json_decode($session);

    } catch (Exception $e) {
        watchdog( 'bullhorn rest', 'Counld not log into the Bullhorn REST API.', array(), WATCHDOG_CRITICAL );
    }
}

function getAuthCode()
{
    $url = 'https://auth.bullhornstaffing.com/oauth/authorize?client_id=' . CLIENT_ID . '&response_type=code&action=Login&username=' . USER . '&password=' . PASS;
    $curl = curl_init($url);
    curl_setopt($curl, CURLOPT_URL, $url);
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($curl, CURLOPT_HEADER, true);
//curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);
    curl_setopt($curl, CURLOPT_AUTOREFERER, true);
    curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 120);
    curl_setopt($curl, CURLOPT_TIMEOUT, 120);

    $content = curl_exec($curl);
    curl_close($curl); //die($content);

    if (preg_match('#Location: (.*)#', $content, $r)) {
        $l = trim($r[1]);
        $temp = preg_split("/code=/", $l);
        $authcode = $temp[1];
    }

    return $authcode;
}

function doBullhornAuth($authCode)
{
    $url = 'https://auth.bullhornstaffing.com/oauth/token?grant_type=authorization_code&code=' . $authCode . '&client_id=' . CLIENT_ID . '&client_secret=' . CLIENT_SECRET;

    $options = array(
        CURLOPT_RETURNTRANSFER => 1,
        CURLOPT_POST => true,
        CURLOPT_POSTFIELDS => array()
    );

    $ch = curl_init($url);
    curl_setopt_array($ch, $options);
    $content = curl_exec($ch);

    curl_close($ch); //die($content);

    return $content;

}

function doBullhornLogin($accessToken)
{
    $url = 'https://rest.bullhornstaffing.com/rest-services/login?version=*&access_token=' . $accessToken;
    $curl = curl_init($url);
    curl_setopt($curl, CURLOPT_URL, $url);
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
//curl_setopt($curl, CURLOPT_HEADER, true);
//curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);
//curl_setopt($curl, CURLOPT_AUTOREFERER, true);
//curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 120);
//curl_setopt($curl, CURLOPT_TIMEOUT, 120);

    $content = curl_exec($curl);
    curl_close($curl);
    return $content;
}

/**
 * Bullhorn REST API Get Request
 *
 * @param $url
 * @return mixed
 */

function bullhorn_rest_api_get_request( $url ) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_PORT, 443);
    curl_setopt($ch, CURLOPT_VERBOSE, 0);
    curl_setopt($ch, CURLOPT_HEADER, 0);
    curl_setopt($ch, CURLOPT_SSLVERSION, 3);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 1);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    $result = curl_exec($ch);

    if($result === false) {
        $ch_errno = curl_errno($ch);
        $ch_error = curl_error($ch);
//        dpm(curl_getinfo(($ch)), 'cURL get information');
        watchdog( 'bullhorn rest', 'Failed to do a Bullhorn REST API GET request.', array(), WATCHDOG_CRITICAL );
        curl_close($ch);
    }

    curl_close($ch);

    $response = json_decode($result);

    return $response;
}

/**
 * Bullhorn REST API Get Request
 *
 * @param $url
 * @return mixed
 */

function bullhorn_rest_api_json_put_request( $url, $data ) {
    $json = json_encode( $data );
//    dpm( $json );

    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_PORT, 443);
    curl_setopt($ch, CURLOPT_VERBOSE, 0);
    curl_setopt($ch, CURLOPT_HEADER, 0);
    curl_setopt($ch, CURLOPT_SSLVERSION, 3);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 1);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");
    curl_setopt($ch, CURLOPT_POSTFIELDS, $json);
//    curl_setopt($ch, CURLOPT_HTTPHEADER, array('BhRestToken:' . $session_obj->BhRestToken)); //After much searching and trial and error this was the key
    $result = curl_exec($ch);

    if($result === false) {
        $ch_errno = curl_errno($ch);
        $ch_error = curl_error($ch);
//        dpm(curl_getinfo(($ch)),'CURL INFO');
        watchdog( 'bullhorn rest', 'Failed to do a Bullhorn REST API PUT request with JSON encoded body.', array(), WATCHDOG_CRITICAL );
        curl_close($ch);
    }

    curl_close($ch);

    $response = json_decode($result);

    return $response;
}